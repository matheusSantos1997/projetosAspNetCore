@using CrudContatosMvc.Enums;
@model PagedList.IPagedList<UsuarioModel>

@{
    ViewData["Title"] = "Listagem de Usuários";
}

<div class="text-center">
    <div class="d-grid gap-2 d-md-flex justify-content-start">
        <a class="btn btn-primary" role="button" asp-controller="Usuario" asp-action="Criar">Adicionar Novo Usuário</a>
    </div>
    <br />

    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
            @TempData["MensagemSucesso"]
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
            @TempData["MensagemErro"]
        </div>
    }

    <br />

    <h1 class="display-4">Listagem de Usuários</h1>

    <table class="table" id="table-usuarios">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Nome</th>
                <th scope="col">Login</th>
                <th scope="col">Email</th>
                <th scope="col">Perfil</th>
                <th scope="col">Total de Contatos</th>
                <th scope="col">Data de Cadastro</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var usuario in Model)
                {
                    <tr>
                        <th scope="row">@usuario.Id</th>
                        <td>@usuario.Nome</td>
                        <td>@usuario.Login</td>
                        <td>@usuario.Email</td>
                        <td>@(usuario.Perfil == PerfimEnum.Admin ? "Administrador" : "Padrão")</td>
                        <td>
                            
                                <a href="javascript:" data-usuario-id="@usuario.Id" onclick="pegarAtributo(this)" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                                    @(usuario.Contatos != null && usuario.Contatos.Any() ? usuario.Contatos?.Count() : 0)
                                </a>
                              
                        </td>
                        <td>@usuario.DataCadastro?.ToString().Substring(0, 10)</td>
                        <td>
                            <div class="btn-group" role="group">
                                  <a role="button" class="btn btn-primary" asp-route-id="@usuario.Id" asp-controller="Usuario" asp-action="Editar">Editar</a>
                                  <a role="button" class="btn btn-danger" asp-route-id="@usuario.Id" asp-controller="Usuario" asp-action="ExcluirConfirmacao">Excluir</a>
                            </div>       
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr class="odd"><td valign="top" colspan="5">Nenhum usuário encontrado!</td></tr>
            }



        </tbody>
    </table>

    <!-- modal -->
    <!-- modal de contatos -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="true" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Listagem de contatos</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                   <div id="listaContatosUsuario"></div>
                </div>
            </div>
        </div>
        </div>

    <!-- modal fim-->

    

    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item" style="margin: 10px">
                Página @(Model!.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.TotalItemCount.
            </li>
            @if (Model.HasPreviousPage)
            {
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="1">Primeira</a></li>
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Anterior</a></li>
            }
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-page="@i" class="@(i == Model.PageNumber ? "text-danger" : "")">@i</a></li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Próxima</a></li>
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@Model.PageCount">Última</a></li>
            }

        </ul>
    </nav>



</div>
