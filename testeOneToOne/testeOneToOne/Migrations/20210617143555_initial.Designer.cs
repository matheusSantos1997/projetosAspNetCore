// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testeOneToOne.context;

namespace testeOneToOne.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210617143555_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("testeOneToOne.models.UserOne", b =>
                {
                    b.Property<int>("idUserOne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("idUserOne");

                    b.ToTable("UsersOne");
                });

            modelBuilder.Entity("testeOneToOne.models.UserTwo", b =>
                {
                    b.Property<int>("idUserTwo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UserOneRef")
                        .HasColumnType("INTEGER");

                    b.HasKey("idUserTwo");

                    b.HasIndex("UserOneRef")
                        .IsUnique();

                    b.ToTable("UsersTwo");
                });

            modelBuilder.Entity("testeOneToOne.models.UserTwo", b =>
                {
                    b.HasOne("testeOneToOne.models.UserOne", "UserOne")
                        .WithOne("UserTwo")
                        .HasForeignKey("testeOneToOne.models.UserTwo", "UserOneRef");
                });
#pragma warning restore 612, 618
        }
    }
}
